@using SocialAPI.Models
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Главная страница";
}
@{
    Users user = (Users)Session["user"];
}
<body>
    <nav role="navigation" class="navbar navbar-default navbar-fixed-top">
        <div class="container-fluid">
            <div id="navbarCollapse" class="collapse navbar-collapse">
                <ul class="nav navbar-nav">
                    <li class="active"><a href="#">Главная</a></li>
                    <li><a href="#">О проекте</a></li>
                    <li><a href="#">Новости</a></li>
                    <li><a data-toggle="modal" data-target="#modal-1">Поиск</a></li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    @if (user == null)
                    {
                        <li><a href="https://oauth.vk.com/authorize?client_id=3608614&display=page&redirect_uri=http://localhost:14314/Authorization/Index/&scope=groups&response_type=token&v=5.53">Войти</a></li>
                    }
                    else
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown"><img src="@user.img" height="20" class="img-circle" /> @user.name <b class="caret"></b></a>
                            <ul class="dropdown-menu">
                                <li><a href="~/Authorization/LogOut">Выйти</a></li>
                                <li class="divider"></li>
                                <li><a href="#">Link 2</a></li>
                                <li><a href="#">Link 3</a></li>
                                <li><a href="#">Link 4</a></li>
                            </ul>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>

    <div class="modal fade" id="modal-1">
        <div class="modal-dialog">
            <form class="form-horizontal" method="post" action="~/Home/Search">
                <div class="modal-content">
                    <div class="modal-header">
                        <button class="close" type="button" data-dismiss="modal">
                            <i class="glyphicon glyphicon-remove"></i>
                        </button>
                        <h4 class="modal-title">Поиск</h4>
                    </div>
                    <div class="modal-body">
                        @if (user != null)
                        {
                            <div class="form-group">
                                <label for="query" class="col-sm-3 control-label">Запрос</label>
                                <div class="col-sm-9">
                                    <input type="text" class="form-control" name="q" id="query" placeholder="Запрос" required>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="type" class="col-sm-3 control-label">Тип сообщества</label>
                                <div class="col-sm-9">
                                    <select name="type" class="form-control" id="type">
                                        <option value="group">Группа</option>
                                        <option value="page">Страница</option>
                                        <option value="event">Мероприятие</option>
                                    </select>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="areaTypeId" class="col-sm-3 control-label">Поиск по</label>
                                <div class="col-sm-9">
                                    <select name="areaType" class="form-control" id="areaTypeId" onchange="areaTypeChanged()">
                                        <option value="0">России</option>
                                        <option value="1">Округу</option>
                                        <option value="2">Субъекту</option>
                                        <option value="3">Городу</option>
                                    </select>
                                    <select name="area" class="form-control" id="areaId" style="visibility:hidden"></select>

                                    <input name="areaCity" class="form-control" id="areaCityId" type="text" placeholder="Введите название города" style="visibility:hidden; width: 200px;" />
                                </div>
                            </div>
                        }
                        else
                        {
                            <h3>Для поиска необходима авторизация</h3>
                        }
                    </div>
                    <div class="modal-footer">
                        <div class="col-xs-5"></div>
                        @if (user != null)
                        {
                            <input name="send" class="form-control" type="submit" value="Отправить" />
                        }
                        else
                        {
                            <a href="https://oauth.vk.com/authorize?client_id=3608614&display=page&redirect_uri=http://localhost:14314/Authorization/Index/&scope=groups&response_type=token&v=5.53" class="btn btn-default">Войти</a>
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>

    <div id="canvas" style="margin-top: 51px; float:left"></div>
    <div id="listOfGroups" class="lstOfGroups"></div>
    @section scripts
    {
        <script type="text/javascript" src="https://www.google.com/jsapi"></script>
        <script type="text/javascript">

            google.load('visualization', '1.0');

            var max_latitude = -90,
                            min_latitude = 90,
                            max_longitude = -180,
                            min_longitude = 180,
                            count = -1,
                            subjectLayer = [],
                            nameOfSubject,
                            fusionTable,
                            numbOfPoly;

            $(document).ready(function () {
                var canvas = document.getElementById('canvas');
                var listOfGroups = document.getElementById('listOfGroups');
                listOfGroups.style.height = document.documentElement.clientHeight - 71 + "px";
                listOfGroups.style.width = "0px";
                canvas.style.height = document.documentElement.clientHeight - 71 + "px";
                canvas.style.width = document.documentElement.clientWidth + "px";
                GetMap();
                MarkerInsert();
            });

            //1) Настройка Google карт
            function GetMap() {

                var status = document.getElementById("stat"),
                    cou = document.getElementById("counting"),
                    coulab = document.getElementById("counting_lab");

                google.maps.visualRefresh = true;

                var extent = new google.maps.LatLng(63.447, 96.673);

                var mapOptions = {
                    zoom: 3,
                    center: extent,
                    mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
                };

                map = new google.maps.Map(document.getElementById("canvas"), mapOptions);
            }

            //2) Процесс установки маркеров на карту
            function MarkerInsert() {

                $.getJSON('@Url.Action("Info", "Home")', function (data) {
                    if (!data) {
                        //status.innerHTML = 'Установка маркеров на карту...';
                    }

                    $.getJSON('@Url.Action("GetData", "Home")', function (data) {

                        if (data != '') {
                            nameOfSubject = data[0].subjectName;

                            // Определение типа гео-поиска
                            if (data[0].isSubject == true) {
                                fusionTable = "1kwr-7AlAIPqDBbdaqkEv7YxSWGSlc01ED5NC2fFp";
                            } else {
                                fusionTable = "1pJJCmSW-DnKGrrbpTbLk4piG6tUZgsr5d8BOeVPk";
                            }

                            if (nameOfSubject != "false") {

                                var sql = encodeURIComponent("SELECT 'geometry' FROM " + fusionTable + " WHERE name = '" + nameOfSubject + "'");

                                var query = new google.visualization.Query('http://www.google.com/fusiontables/gvizdata?tq=' + sql);
                                var queryEnd = false;
                                query.send(function (response) {

                                    numbOfPoly = response.getDataTable().getNumberOfRows();


                                    for (var i2 = 0; i2 < numbOfPoly; i2++) {

                                        var data = response.getDataTable().getValue(i2, 0);
                                        //create a XML parser
                                        if (window.DOMParser) {
                                            var parser = new DOMParser();
                                            var kml = parser.parseFromString(data, "text/xml");
                                        } else { // Internet Explorer
                                            var kml = new ActiveXObject("Microsoft.XMLDOM");
                                            kml.loadXML(data);
                                        }
                                        //get the coordinates of Subject Polygon
                                        var latLngs = kml.getElementsByTagName("coordinates")[0].childNodes[0].nodeValue.split(' ');

                                        //create an array of LatLngs
                                        var subLatLngs = [];
                                        for (var i = 0; i < latLngs.length; i++) {
                                            var latLng = latLngs[i].split(',');
                                            //<coordinates> for this FusionTable comes in lng,lat format
                                            subLatLngs.push(new google.maps.LatLng(latLng[1], latLng[0]));
                                        }
                                        //initialize the polygon
                                        subjectLayer[i2] = new google.maps.Polygon({
                                            paths: subLatLngs,
                                            clickable: false,
                                            fillColor: 'grey',
                                            strokeColor: 'black',
                                            strokeWeight: 1,
                                            map: map
                                        });
                                    }
                                    queryEnd = true;
                                });
                                //setTimeout(markerPlacing, 3500, data);

                                var timeStop = setInterval(function () {
                                    if (queryEnd) {
                                        markerPlacing(data);
                                        clearInterval(timeStop);
                                    }
                                }, 10);

                            } else {
                                listOfGroups.style.width = "300px";
                                canvas.style.height = document.documentElement.clientHeight - 71 + "px";
                                canvas.style.width = document.documentElement.clientWidth - 300 + "px";
                                $.each(data, function (i, item) {
                                    MarkerSetting(item);
                                    //Подсчет количества результатов (с геотегами)
                                    count++;

                                    fitting(item);
                                })
                            }

                            coulab.style = 'visibility:visible';
                            cou.style = 'visibility:visible';
                            cou.innerHTML = count;
                            //status.innerHTML = 'Готово!';
                        }
                        else alert("Ошибка запроса (Нет результатов)");
                    })

                })

            }

            // Создание списка групп
            function listOfGr(item) {
                var groupDescr = document.createElement('div');
                groupDescr.className = "grpDescr";
                listOfGroups.appendChild(groupDescr);
                var groupDescrImg = document.createElement('div');
                var groupImg = document.createElement('img');
                groupImg.src = item.photo_big;
                groupImg.width = "70";
                groupDescrImg.appendChild(groupImg);
                var groupDescrTxt = document.createElement('div');
                groupDescrImg.className = "grpDescrImg";
                groupDescrTxt.className = "grpDescrTxt";
                groupDescr.appendChild(groupDescrImg);
                groupDescr.appendChild(groupDescrTxt);
                var grpName = document.createElement('div');
                var grpDesc = document.createElement('div');
                grpName.innerHTML = "<font size='3'><b>" + item.name + "</b></font>";
                grpName.style = 'border-bottom: 1px solid black; height: 25px; overflow: hidden; text-overflow: ellipsis';
                grpDesc.innerHTML = "<font size='1'>" + item.description + "</font>";
                grpDesc.style = 'line-height: 1; height: 195px; overflow: hidden; text-overflow: ellipsis';
                groupDescrTxt.appendChild(grpName);
                groupDescrTxt.appendChild(grpDesc);
            }

            //Изменение типа гео-поиска
            function areaTypeChanged() {
                var areaType = document.getElementById("areaTypeId"),
                area = document.getElementById("areaId"),
                areaCity = document.getElementById("areaCityId");

                if (areaType.value == 0) {
                    area.style = "visibility: hidden";
                    areaCity.style = "visibility: hidden";
                }
                else if (areaType.value == 1) {
                    area.style = "visibility: visible"
                    areaCity.style = "visibility: hidden";
                    $.getJSON('@Url.Action("GetArea", "Home")', { table: "District" }, function (data) {
                        for (i = area.length - 1; i >= 0; i--) {
                            area.remove(i);
                        }
                        $.each(data, function (i, item) {
                            var option = document.createElement("option");
                            option.text = item.name;
                            area.add(option);
                        });
                    });
                }
                else if (areaType.value == 2) {
                    area.style = "visibility: visible"
                    areaCity.style = "visibility: hidden";
                    $.getJSON('@Url.Action("GetArea", "Home")', { table: "Region" }, function (data) {
                        for (i = area.length - 1; i >= 0; i--) {
                            area.remove(i);
                        }
                        $.each(data, function (i, item) {
                            var option = document.createElement("option");
                            option.text = item.name;
                            area.add(option);
                        });
                    });
                }
                else if (areaType.value == 3) {
                    area.style = "visibility: hidden"
                    areaCity.style = "visibility: visible";
                }
            }

            //Настройка маркеров
            function MarkerSetting(item) {

                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(parseFloat(item.latitude), parseFloat(item.longitude)),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.name
                });

                var infowindow = new google.maps.InfoWindow({
                    content: "<div style='width: 270px; margin-right: 20px'><font size='3'><b>" + item.name + "</b></font><br /><font size='2'>" + item.description + "</font><br /><br /><font size='1'>Количество пользователей: " + item.members_count + "</font><br /><br /><div style='text-align: center'><img src='" + item.photo_big + "' width='70%'></img></div></div>"
                });

                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);
                });

                listOfGr(item);
            }

            //Установка маркеров
            function markerPlacing(data) {
                listOfGroups.style.width = "300px";
                canvas.style.height = document.documentElement.clientHeight - 71 + "px";
                canvas.style.width = document.documentElement.clientWidth - 300 + "px";
                $.each(data, function (i, item) {
                    subjectLayer.forEach(function (itemSubj, k, subjectLayer) {
                        if (google.maps.geometry.poly.containsLocation(new google.maps.LatLng(parseFloat(item.latitude), parseFloat(item.longitude)), itemSubj) == true) {
                            MarkerSetting(item);
                            //Подсчет количества результатов (с геотегами)
                            count++;
                            fitting(item);
                        }
                    })
                })
            }

            //Установка экстента после вставки маркеров
            function fitting(item) {
                if (max_latitude <= parseFloat(item.latitude)) {
                    max_latitude = parseFloat(item.latitude);
                }
                if (min_latitude >= parseFloat(item.latitude)) {
                    min_latitude = parseFloat(item.latitude);
                }
                if (max_longitude <= parseFloat(item.longitude)) {
                    max_longitude = parseFloat(item.longitude);
                }
                if (min_longitude >= parseFloat(item.longitude)) {
                    min_longitude = parseFloat(item.longitude);
                }

                map.fitBounds(new google.maps.LatLngBounds(
                        new google.maps.LatLng(min_latitude, min_longitude),
                        new google.maps.LatLng(max_latitude, max_longitude)));
            }

        </script>

    }
</body>